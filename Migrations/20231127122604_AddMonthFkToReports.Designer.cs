// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeopleCalcBot;

#nullable disable

namespace PeopleCalcBot.Migrations
{
    [DbContext(typeof(BotDBContext))]
    [Migration("20231127122604_AddMonthFkToReports")]
    partial class AddMonthFkToReports
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Congregations", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DistrictID");

                    b.ToTable("CongregationsTable");
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Districts", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DistrictsTable");
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Documents", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CongregationID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("File")
                        .HasColumnType("BLOB");

                    b.Property<int?>("MonthID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CongregationID");

                    b.HasIndex("MonthID");

                    b.HasIndex("UserID");

                    b.ToTable("DocumentsTable");
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+MeetingTypes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("MeetingTypeTable");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "LAM - Life and Ministry"
                        },
                        new
                        {
                            ID = 2,
                            Name = "WKD - Weekend Meenting"
                        });
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Months", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("MonthsTable");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "January"
                        },
                        new
                        {
                            ID = 2,
                            Name = "February"
                        },
                        new
                        {
                            ID = 3,
                            Name = "March"
                        },
                        new
                        {
                            ID = 4,
                            Name = "April"
                        },
                        new
                        {
                            ID = 5,
                            Name = "May"
                        },
                        new
                        {
                            ID = 6,
                            Name = "June"
                        },
                        new
                        {
                            ID = 7,
                            Name = "July"
                        },
                        new
                        {
                            ID = 8,
                            Name = "August"
                        },
                        new
                        {
                            ID = 9,
                            Name = "September"
                        },
                        new
                        {
                            ID = 10,
                            Name = "October"
                        },
                        new
                        {
                            ID = 11,
                            Name = "November"
                        },
                        new
                        {
                            ID = 12,
                            Name = "December"
                        });
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Reports", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatingDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MeetingTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MonthID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WeekID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("MeetingTypeID");

                    b.HasIndex("MonthID");

                    b.HasIndex("UserID");

                    b.HasIndex("WeekID");

                    b.ToTable("ReportsTable");
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TelegramID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("UsersTable");
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Weeks", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("WeeksTable");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "First"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Second"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Third"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Fourth"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Fifth"
                        });
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Congregations", b =>
                {
                    b.HasOne("PeopleCalcBot.BotDBContext+Districts", "District")
                        .WithMany()
                        .HasForeignKey("DistrictID");

                    b.Navigation("District");
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Documents", b =>
                {
                    b.HasOne("PeopleCalcBot.BotDBContext+Congregations", "Congregation")
                        .WithMany()
                        .HasForeignKey("CongregationID");

                    b.HasOne("PeopleCalcBot.BotDBContext+Months", "Month")
                        .WithMany()
                        .HasForeignKey("MonthID");

                    b.HasOne("PeopleCalcBot.BotDBContext+User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Congregation");

                    b.Navigation("Month");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PeopleCalcBot.BotDBContext+Reports", b =>
                {
                    b.HasOne("PeopleCalcBot.BotDBContext+MeetingTypes", "MeetingType")
                        .WithMany()
                        .HasForeignKey("MeetingTypeID");

                    b.HasOne("PeopleCalcBot.BotDBContext+Months", "Month")
                        .WithMany()
                        .HasForeignKey("MonthID");

                    b.HasOne("PeopleCalcBot.BotDBContext+User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("PeopleCalcBot.BotDBContext+Weeks", "Week")
                        .WithMany()
                        .HasForeignKey("WeekID");

                    b.Navigation("MeetingType");

                    b.Navigation("Month");

                    b.Navigation("User");

                    b.Navigation("Week");
                });
#pragma warning restore 612, 618
        }
    }
}
